#include<stdio.h>
#define INF 999
#define MAX 10
void dvrt();
struct rtable
{
unsigned dist[MAX];
unsigned from[MAX];
}
rt[10];
int dm[MAX][MAX];
int n,i,j,k,count=0,hop[10][10]={0},L=0;
int main()
{
dvrt();
}
void dvrt()
{
printf("enter the value of n");
scanf("%d",&n);
printf("enter adjacency matrix");
for(i=0;i<n;i++)
{
for(j=0;j<n;j++)
scanf("%d",&dm[i][j]);
}
for(i=0;i<n;i++)
{
for(j=0;j<n;j++)
{
rt[i].dist[j]=dm[i][j];
rt[i].from[j]=j;
}
}
do
{
count=0;
for(i=0;i<n;i++)
{
for(j=0;j<n;j++)
{
for(k=0;k<n;k++)
{
if(rt[i].dist[j]>dm[i][k]+rt[k].dist[j])
{
rt[i].dist[j]=rt[i].dist[k]+rt[k].dist[j];
rt[i].from[j]=k;
if(count==0)
hop[i][j]=1;
else
hop[i][j]=count+hop[k][j];
count++;
}
}
count=0;
}
}
}
while(count!=0);
for(i=0;i<n;i++)
{
printf("\n\n router=%d:\n",i+1);
printf("\n node\t via\t dist\t hop");
for(j=0;j<n;j++)
{
if(i==j)
printf("\n%d\t%d\t%d\t0",j+1,rt[j].from[j]+1,rt[i].dist[j]);
else
printf("\n%d\t%d\t%d\t%d\t",j+1,rt[i].from[j],rt[i].dist[j],hop[i][j]+1);
}
}
}